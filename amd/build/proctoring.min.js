define("quizaccess_exproctor/proctoring",["exports","jquery","core/ajax"],(function(_exports,_jquery,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.webcam_proctoring=_exports.screen_proctoring=_exports.init=void 0,_jquery=_interopRequireDefault(_jquery),_ajax=_interopRequireDefault(_ajax);const webcam_proctoring=props=>{let isCameraAllowed=!1;if(window.console.log(isCameraAllowed),(0,_jquery.default)((()=>{(0,_jquery.default)("#id_submitbutton").prop("disabled",!0),(0,_jquery.default)("#id_web_proctoring").on("change",(function(){this.checked&&isCameraAllowed?(0,_jquery.default)("#id_submitbutton").prop("disabled",!1):(0,_jquery.default)("#id_submitbutton").prop("disabled",!0)}))})),null!==document.getElementById("page-mod-quiz-summary")&&document.getElementById("page-mod-quiz-summary").innerHTML.length)return!1;if(null!==document.getElementById("page-mod-quiz-review")&&document.getElementById("page-mod-quiz-review").innerHTML.length)return!1;let width=props.image_width,height=0,streaming=!1;const takepicturedelay=props.frequency;props.is_quiz_started&&(0,_jquery.default)("#mod_quiz_navblock").append('<div class="card-body p-3"><h3 class="no text-left">Webcam</h3> <br/><video id="video">Video stream not available.</video><canvas id="canvas" style="display:none;"></canvas><div class="output" style="display:none;"><img id="photo" alt="The picture will appear in this box."/></div></div>');let video=document.getElementById("video"),canvas=document.getElementById("canvas"),photo=document.getElementById("photo");navigator.mediaDevices.getUserMedia({video:!0,audio:!1}).then((stream=>{video.srcObject=stream,video.play(),isCameraAllowed=!0})).catch((err=>{window.console.error("An error occurred: ".concat(err))}));const takepicture=()=>{if(props.is_quiz_started){const context=canvas.getContext("2d");if(width&&height){canvas.width=width,canvas.height=height,context.drawImage(video,0,0,width,height);const data=canvas.toDataURL("image/png");photo.setAttribute("src",data),props.webcampicture=data;const api_function="quizaccess_exproctor_send_webcam_shot",params={courseid:props.courseid,webcamshotid:props.id,quizid:props.quizid,webcampicture:data},request={methodname:api_function,args:params};window.console.log(params),_ajax.default.call([request])[0].done((data=>{window.console.log(data),0!==data.warnings.length&&video&&Notification.addNotification({message:"Something went wrong during taking the image.",type:"error"})})).fail(Notification.exception)}else(()=>{const context=canvas.getContext("2d");context.fillStyle="#AAA",context.fillRect(0,0,canvas.width,canvas.height);const data=canvas.toDataURL("image/png");photo.setAttribute("src",data)})()}};video&&(video.addEventListener("canplay",(()=>{streaming||(props.is_quiz_started&&(width=270),height=video.videoHeight/(video.videoWidth/width),isNaN(height)&&(height=width/(4/3)),video.setAttribute("width",width),video.setAttribute("height",height),canvas.setAttribute("width",width),canvas.setAttribute("height",height),streaming=!0)}),!1),props.is_quiz_started&&setInterval(takepicture,takepicturedelay));return props.is_close?(video.srcObject.getVideoTracks().forEach((track=>track.stop())),isCameraAllowed=!1,!1):void 0};_exports.webcam_proctoring=webcam_proctoring;const screen_proctoring=async props=>{let isCameraAllowed=!1;(0,_jquery.default)((()=>{(0,_jquery.default)("#id_submitbutton").prop("disabled",!0),(0,_jquery.default)("#id_screen_proctoring").on("change",(function(){this.checked&&isCameraAllowed?(0,_jquery.default)("#id_submitbutton").prop("disabled",!1):(0,_jquery.default)("#id_submitbutton").prop("disabled",!0)}))}));let width=props.image_width,height=0,streaming=!1;if(null!==document.getElementById("page-mod-quiz-summary")&&document.getElementById("page-mod-quiz-summary").innerHTML.length)return!1;if(null!==document.getElementById("page-mod-quiz-review")&&document.getElementById("page-mod-quiz-review").innerHTML.length)return!1;props.is_quiz_started&&(0,_jquery.default)("#mod_quiz_navblock").append('<div class="card-body p-3"><h3 class="no text-left">Screen</h3> <br/><video id="video_sc">Screen stream not available.</video><canvas id="canvas_sc" style="display:none;"></canvas><div class="output" style="display:none;"><img id="photo_sc" alt="The picture will appear in this box."/></div></div>');let video=document.getElementById("video_sc"),canvas=document.getElementById("canvas_sc"),photo=document.getElementById("photo_sc");const takepicturedelay=props.frequency,captureStream=navigator.mediaDevices.getDisplayMedia({video:{cursor:"always"},audio:!1}).then((stream=>{video.srcObject=stream,video.play(),isCameraAllowed=!0})).catch((err=>{window.console.error("An error occurred: ".concat(err))})),takescreenshot=()=>{if(window.console.log("Before if"),props.is_quiz_started){const context=canvas.getContext("2d");if(window.console.log(props),width&&height){canvas.width=width,canvas.height=height,context.drawImage(video,0,0,width,height);const data=canvas.toDataURL("image/png");photo.setAttribute("src",data),props.webcampicture=data;const api_function="quizaccess_exproctor_send_screen_shot",params={courseid:props.courseid,screenshotid:props.id,quizid:props.quizid,screenpicture:data},request={methodname:api_function,args:params};window.console.log(params),window.console.log(_ajax.default.call([request])),_ajax.default.call([request])[0].done((data=>{window.console.log(data),0!==data.warnings.length&&video&&Notification.addNotification({message:"Something went wrong during taking the screen-shot.",type:"error"})})).fail(Notification.exception)}else(()=>{const context=canvas.getContext("2d");context.fillStyle="#AAA",context.fillRect(0,0,canvas.width,canvas.height);const data=canvas.toDataURL("image/png");photo.setAttribute("src",data)})()}};video&&(video.addEventListener("canplay",(()=>{streaming||(props.is_quiz_started&&(width=270),height=video.videoHeight/(video.videoWidth/width),isNaN(height)&&(height=width/(4/3)),video.setAttribute("width",width),video.setAttribute("height",height),canvas.setAttribute("width",width),canvas.setAttribute("height",height),streaming=!0)}),!1),window.console.log("Bottom: ".concat(props)),window.console.log(props),window.console.log("Bottom: ".concat(props)),window.console.log(isCameraAllowed),props.is_quiz_started&&(window.console.log("Inside trigger"),setInterval(takescreenshot,takepicturedelay)));return props.is_close?(captureStream.getTracks().forEach((track=>track.stop())),isCameraAllowed=!1,!1):void 0};_exports.screen_proctoring=screen_proctoring;_exports.init=props=>{const submit_button_id=(0,_jquery.default)(".quizstartbuttondiv").find("button")[0].id;let data={image_width:320,frequency:3e3,is_quiz_started:!1,is_close:!0};(0,_jquery.default)("#".concat(submit_button_id)).click((async function(){data.is_close=!1,props.webcamproctoringrequired&&webcam_proctoring(data),props.screenproctoringrequired&&screen_proctoring(data)})),(0,_jquery.default)("#id_cancel").click((function(){data.is_close=!0,props.webcamproctoringrequired&&webcam_proctoring(data),props.screenproctoringrequired&&screen_proctoring(data)}))}}));

//# sourceMappingURL=proctoring.min.js.map