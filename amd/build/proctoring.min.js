define("quizaccess_exproctor/proctoring",["exports","jquery","core/ajax"],(function(_exports,_jquery,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.webcam_proctoring=void 0,_jquery=_interopRequireDefault(_jquery),_ajax=_interopRequireDefault(_ajax);_exports.webcam_proctoring=props=>{let height=0,streaming=!1;let video=document.getElementById("video"),canvas=document.getElementById("canvas"),photo=document.getElementById("photo");(0,_jquery.default)("#mod_quiz_navblock").append('<div class="card-body p-3"><h3 class="no text-left">Webcam</h3> <br/><video id="video">Video stream not available.</video><canvas id="canvas" style="display:none;"></canvas><div class="output" style="display:none;"><img id="photo" alt="The picture will appear in this box."/></div></div>'),navigator.mediaDevices.getUserMedia({video:!0,audio:!1}).then((stream=>{video.srcObject=stream,video.play()})).catch((err=>{window.console.error("An error occurred: ".concat(err))}));const takepicture=()=>{if(props.is_quiz_started){const context=canvas.getContext("2d");if(height){canvas.width=320,canvas.height=height,context.drawImage(video,0,0,320,height);const data=canvas.toDataURL("image/png");photo.setAttribute("src",data);const api_function="quizaccess_exproctor_send_webcam_shot",params={courseid:props.courseid,webcamshotid:props.id,quizid:props.quizid,webcampicture:data};_ajax.default.call([{methodname:api_function,args:params}])[0].done((data=>{0!==data.warnings.length&&video&&Notification.addNotification({message:"Something went wrong during taking the image.",type:"error"})})).fail(Notification.exception)}}else(()=>{const context=canvas.getContext("2d");context.fillStyle="#AAA",context.fillRect(0,0,canvas.width,canvas.height);const data=canvas.toDataURL("image/png");photo.setAttribute("src",data)})()};video&&(video.addEventListener("canplay",(()=>{streaming||(height=video.videoHeight/video.videoWidth*320,video.setAttribute("width",320),video.setAttribute("height",height),canvas.setAttribute("width",320),canvas.setAttribute("height",height),streaming=!0)}),!1),props.is_quiz_started&&(setTimeout(takepicture,3e3),setInterval(takepicture,3e4)))}}));

//# sourceMappingURL=proctoring.min.js.map