{"version":3,"file":"screen_proctoring.min.js","sources":["../src/screen_proctoring.js"],"sourcesContent":["import $ from 'jquery';\nimport Ajax from 'core/ajax';\n\nexport const init = async(props) => {\n    let width = props.image_width; // We will scale the photo width to this\n    let height = 0; // This will be computed based on the input stream\n\n    let streaming = false;\n\n    // Skip for summary page\n    if (document.getElementById(\"page-mod-quiz-summary\") !== null &&\n        document.getElementById(\"page-mod-quiz-summary\").innerHTML.length) {\n        return false;\n    }\n\n    // Skip for review page\n    if (document.getElementById(\"page-mod-quiz-review\") !== null &&\n        document.getElementById(\"page-mod-quiz-review\").innerHTML.length) {\n        props.is_quiz_started = false;\n        return false;\n    }\n\n    if (props.is_quiz_started) {\n        // eslint-disable-next-line max-len\n        $('#mod_quiz_navblock').append(\n            '<div class=\"card-body p-3\" style=\"display: none\"><h3 class=\"no text-left\">Screen</h3> <br/>' +\n            '<video id=\"exproctor_video_sc\">Screen stream not available.</video>' +\n            '<canvas id=\"exproctor_canvas_sc\" style=\"display:none;\"></canvas>' +\n            '<div class=\"exproctor_output_sc\" style=\"display:none;\">' +\n            '<img id=\"exproctor_photo_sc\" alt=\"The picture will appear in this box.\"/></div></div>');\n    }\n\n    let video = document.getElementById('exproctor_video_sc');\n    let canvas = document.getElementById('exproctor_canvas_sc');\n    let photo = document.getElementById('exproctor_photo_sc');\n\n    const get_screen_share_permission = () => {\n        return navigator.mediaDevices\n            .getDisplayMedia({\n                video: {\n                    cursor: \"always\"\n                }, audio: false\n            })\n            .then((stream) => {\n                video.srcObject = stream;\n                video.play();\n            })\n            .catch(() => {\n                alert(\"This quiz requires Screen Sharing permission to start!\");\n                get_screen_share_permission();\n            });\n    };\n\n    $(\"#id_submitbutton\").click(function() {\n        props.is_quiz_started = true;\n        takescreenshot();\n        setInterval(takescreenshot, props.screenshotdelay);\n    });\n\n    $(\"[id^=single_button].btn.btn-primary\").click(function() {\n        get_screen_share_permission();\n    });\n\n    const clearphoto = () => {\n        const context = canvas.getContext(\"2d\");\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n\n        const data = canvas.toDataURL(\"image/png\");\n        photo.setAttribute(\"src\", data);\n    };\n\n    const takescreenshot = () => {\n        props.id = localStorage.getItem(\"attemptId\");\n\n        if (props.is_quiz_started && props.id) {\n            const context = canvas.getContext(\"2d\");\n            window.console.log(props);\n            if (width && height) {\n                canvas.width = width;\n                canvas.height = height;\n                context.drawImage(video, 0, 0, width, height);\n\n                const data = canvas.toDataURL(\"image/png\");\n                photo.setAttribute(\"src\", data);\n                props.webcampicture = data;\n\n                const params = {\n                    'courseid': props.courseid,\n                    'attemptid': props.id,\n                    'quizid': props.quizid,\n                    'screenshot': data,\n                };\n\n                const request = {\n                    methodname: 'quizaccess_exproctor_send_screen_shot',\n                    args: params\n                };\n\n                window.console.log(params);\n\n                Ajax.call([request])[0].done((data) => {\n                    window.console.log(data);\n                    if (data.warnings.length !== 0) {\n                        if (video) {\n                            Notification.addNotification({\n                                message: 'Something went wrong during taking the screen-shot.', type: 'error'\n                            });\n                        }\n                    }\n                }).fail((err) => {\n                    window.console.log(`An error occurred (screen random): ${err}`);\n                });\n            } else {\n                clearphoto();\n            }\n        }\n    };\n\n    if (video) {\n        video.addEventListener(\n            \"canplay\",\n            () => {\n                if (!streaming) {\n                    if (props.is_quiz_started) {\n                        width = 270;\n                    }\n                    height = video.videoHeight / (video.videoWidth / width);\n\n                    if (isNaN(height)) {\n                        height = width / (4 / 3);\n                    }\n\n                    video.setAttribute(\"width\", width);\n                    video.setAttribute(\"height\", height);\n                    canvas.setAttribute(\"width\", width);\n                    canvas.setAttribute(\"height\", height);\n                    streaming = true;\n                }\n            },\n            false\n        );\n    }\n};"],"names":["async","width","props","image_width","height","streaming","document","getElementById","innerHTML","length","is_quiz_started","append","video","canvas","photo","get_screen_share_permission","navigator","mediaDevices","getDisplayMedia","cursor","audio","then","stream","srcObject","play","catch","alert","click","takescreenshot","setInterval","screenshotdelay","id","localStorage","getItem","context","getContext","window","console","log","drawImage","data","toDataURL","setAttribute","webcampicture","params","courseid","quizid","request","methodname","args","call","done","warnings","Notification","addNotification","message","type","fail","err","fillStyle","fillRect","clearphoto","addEventListener","videoHeight","videoWidth","isNaN"],"mappings":"4WAGoBA,kBACZC,MAAQC,MAAMC,YACdC,OAAS,EAETC,WAAY,KAGyC,OAArDC,SAASC,eAAe,0BACxBD,SAASC,eAAe,yBAAyBC,UAAUC,cACpD,KAI6C,OAApDH,SAASC,eAAe,yBACxBD,SAASC,eAAe,wBAAwBC,UAAUC,cAC1DP,MAAMQ,iBAAkB,GACjB,EAGPR,MAAMQ,qCAEJ,sBAAsBC,OACpB,kXAOJC,MAAQN,SAASC,eAAe,sBAChCM,OAASP,SAASC,eAAe,uBACjCO,MAAQR,SAASC,eAAe,4BAE9BQ,4BAA8B,IACzBC,UAAUC,aACZC,gBAAgB,CACbN,MAAO,CACHO,OAAQ,UACTC,OAAO,IAEbC,MAAMC,SACHV,MAAMW,UAAYD,OAClBV,MAAMY,UAETC,OAAM,KACHC,MAAM,0DACNX,qDAIV,oBAAoBY,OAAM,WACxBzB,MAAMQ,iBAAkB,EACxBkB,iBACAC,YAAYD,eAAgB1B,MAAM4B,wCAGpC,uCAAuCH,OAAM,WAC3CZ,uCAYEa,eAAiB,QACnB1B,MAAM6B,GAAKC,aAAaC,QAAQ,aAE5B/B,MAAMQ,iBAAmBR,MAAM6B,GAAI,OAC7BG,QAAUrB,OAAOsB,WAAW,SAClCC,OAAOC,QAAQC,IAAIpC,OACfD,OAASG,OAAQ,CACjBS,OAAOZ,MAAQA,MACfY,OAAOT,OAASA,OAChB8B,QAAQK,UAAU3B,MAAO,EAAG,EAAGX,MAAOG,cAEhCoC,KAAO3B,OAAO4B,UAAU,aAC9B3B,MAAM4B,aAAa,MAAOF,MAC1BtC,MAAMyC,cAAgBH,WAEhBI,OAAS,UACC1C,MAAM2C,mBACL3C,MAAM6B,UACT7B,MAAM4C,kBACFN,MAGZO,QAAU,CACZC,WAAY,wCACZC,KAAML,QAGVR,OAAOC,QAAQC,IAAIM,sBAEdM,KAAK,CAACH,UAAU,GAAGI,MAAMX,OAC1BJ,OAAOC,QAAQC,IAAIE,MACU,IAAzBA,KAAKY,SAAS3C,QACVG,OACAyC,aAAaC,gBAAgB,CACzBC,QAAS,sDAAuDC,KAAM,aAInFC,MAAMC,MACLtB,OAAOC,QAAQC,iDAA0CoB,aAhDtD,YACTxB,QAAUrB,OAAOsB,WAAW,MAClCD,QAAQyB,UAAY,OACpBzB,QAAQ0B,SAAS,EAAG,EAAG/C,OAAOZ,MAAOY,OAAOT,cAEtCoC,KAAO3B,OAAO4B,UAAU,aAC9B3B,MAAM4B,aAAa,MAAOF,OA6ClBqB,KAKRjD,OACAA,MAAMkD,iBACF,WACA,KACSzD,YACGH,MAAMQ,kBACNT,MAAQ,KAEZG,OAASQ,MAAMmD,aAAenD,MAAMoD,WAAa/D,OAE7CgE,MAAM7D,UACNA,OAASH,OAAS,EAAI,IAG1BW,MAAM8B,aAAa,QAASzC,OAC5BW,MAAM8B,aAAa,SAAUtC,QAC7BS,OAAO6B,aAAa,QAASzC,OAC7BY,OAAO6B,aAAa,SAAUtC,QAC9BC,WAAY,MAGpB"}