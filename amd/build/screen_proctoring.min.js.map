{"version":3,"file":"screen_proctoring.min.js","sources":["../src/screen_proctoring.js"],"sourcesContent":["import $ from \"jquery\";\nimport Ajax from \"core/ajax\";\n\nexport const init = async (props) => {\n  let width = props.image_width; // We will scale the photo width to this\n  let height = 0; // This will be computed based on the input stream\n\n  let streaming = false;\n\n  // Skip for summary page\n  if (\n    document.getElementById(\"page-mod-quiz-summary\") !== null &&\n    document.getElementById(\"page-mod-quiz-summary\").innerHTML.length\n  ) {\n    return false;\n  }\n\n  // Skip for review page\n  if (\n    document.getElementById(\"page-mod-quiz-review\") !== null &&\n    document.getElementById(\"page-mod-quiz-review\").innerHTML.length\n  ) {\n    props.is_quiz_started = false;\n    return false;\n  }\n\n  if (props.is_quiz_started) {\n    // eslint-disable-next-line max-len\n    $(\"#mod_quiz_navblock\").append(\n      '<div class=\"card-body p-3\" style=\"display: none\"><h3 class=\"no text-left\">Screen</h3> <br/>' +\n        '<video id=\"exproctor_video_sc\">Screen stream not available.</video>' +\n        '<canvas id=\"exproctor_canvas_sc\" style=\"display:none;\"></canvas>' +\n        '<div class=\"exproctor_output_sc\" style=\"display:none;\">' +\n        '<img id=\"exproctor_photo_sc\" alt=\"The picture will appear in this box.\"/></div></div>'\n    );\n  }\n\n  let video = document.getElementById(\"exproctor_video_sc\");\n  let canvas = document.getElementById(\"exproctor_canvas_sc\");\n  let photo = document.getElementById(\"exproctor_photo_sc\");\n\n  const get_screen_share_permission = () => {\n    return navigator.mediaDevices\n      .getDisplayMedia({\n        video: {\n          cursor: \"always\",\n        },\n        audio: false,\n      })\n      .then((stream) => {\n        const displaySurface = stream.getVideoTracks()[0].getSettings().displaySurface;\n        if(displaySurface !== \"monitor\"){\n          alert(\"This quiz requires Entire Screen sharing permission to start!\");\n          get_screen_share_permission();\n        }\n        video.srcObject = stream;\n        video.play();\n      })\n      .catch(() => {\n        alert(\"This quiz requires Screen Sharing permission to start!\");\n        get_screen_share_permission();\n      });\n  };\n\n  $(\"#id_submitbutton\").click(function () {\n    localStorage.removeItem(\"attemptId\");\n    localStorage.removeItem(\"bucketName\");\n    props.is_quiz_started = true;\n    takescreenshot();\n    setInterval(takescreenshot, props.screenshotdelay);\n  });\n\n  $(\"[id^=single_button].btn.btn-primary\").click(function () {\n    get_screen_share_permission();\n  });\n\n  const clearphoto = () => {\n    const context = canvas.getContext(\"2d\");\n    context.fillStyle = \"#AAA\";\n    context.fillRect(0, 0, canvas.width, canvas.height);\n\n    const data = canvas.toDataURL(\"image/png\");\n    photo.setAttribute(\"src\", data);\n  };\n\n  const takescreenshot = () => {\n    props.id = localStorage.getItem(\"attemptId\");\n\n    if (props.is_quiz_started && props.id) {\n      const context = canvas.getContext(\"2d\");\n      window.console.log(props);\n      if (width && height) {\n        canvas.width = width;\n        canvas.height = height;\n        context.drawImage(video, 0, 0, width, height);\n\n        const data = canvas.toDataURL(\"image/png\");\n        photo.setAttribute(\"src\", data);\n        props.webcampicture = data;\n\n        const params = {\n          courseid: props.courseid,\n          attemptid: props.id,\n          quizid: props.quizid,\n          screenshot: data,\n          bucketName: localStorage.getItem(\"bucketName\"),\n        };\n\n        const request = {\n          methodname: \"quizaccess_exproctor_send_screen_shot\",\n          args: params,\n        };\n\n        window.console.log(params);\n\n        Ajax.call([request])[0]\n          .done((data) => {\n            window.console.log(data);\n            if (data.warnings.length !== 0) {\n              if (video) {\n                Notification.addNotification({\n                  message:\n                    \"Something went wrong during taking the screen-shot.\",\n                  type: \"error\",\n                });\n              }\n            }\n          })\n          .fail((err) => {\n            window.console.log(`An error occurred (screen random): ${err}`);\n          });\n      } else {\n        clearphoto();\n      }\n    }\n  };\n\n  if (video) {\n    video.addEventListener(\n      \"canplay\",\n      () => {\n        if (!streaming) {\n          if (props.is_quiz_started) {\n            width = 270;\n          }\n          height = video.videoHeight / (video.videoWidth / width);\n\n          if (isNaN(height)) {\n            height = width / (4 / 3);\n          }\n\n          video.setAttribute(\"width\", width);\n          video.setAttribute(\"height\", height);\n          canvas.setAttribute(\"width\", width);\n          canvas.setAttribute(\"height\", height);\n          streaming = true;\n        }\n      },\n      false\n    );\n  }\n};\n"],"names":["async","width","props","image_width","height","streaming","document","getElementById","innerHTML","length","is_quiz_started","append","video","canvas","photo","get_screen_share_permission","navigator","mediaDevices","getDisplayMedia","cursor","audio","then","stream","getVideoTracks","getSettings","displaySurface","alert","srcObject","play","catch","click","localStorage","removeItem","takescreenshot","setInterval","screenshotdelay","id","getItem","context","getContext","window","console","log","drawImage","data","toDataURL","setAttribute","webcampicture","params","courseid","attemptid","quizid","screenshot","bucketName","request","methodname","args","call","done","warnings","Notification","addNotification","message","type","fail","err","fillStyle","fillRect","clearphoto","addEventListener","videoHeight","videoWidth","isNaN"],"mappings":"4WAGoBA,kBACdC,MAAQC,MAAMC,YACdC,OAAS,EAETC,WAAY,KAIuC,OAArDC,SAASC,eAAe,0BACxBD,SAASC,eAAe,yBAAyBC,UAAUC,cAEpD,KAK6C,OAApDH,SAASC,eAAe,yBACxBD,SAASC,eAAe,wBAAwBC,UAAUC,cAE1DP,MAAMQ,iBAAkB,GACjB,EAGLR,MAAMQ,qCAEN,sBAAsBC,OACtB,kXAQAC,MAAQN,SAASC,eAAe,sBAChCM,OAASP,SAASC,eAAe,uBACjCO,MAAQR,SAASC,eAAe,4BAE9BQ,4BAA8B,IAC3BC,UAAUC,aACdC,gBAAgB,CACfN,MAAO,CACLO,OAAQ,UAEVC,OAAO,IAERC,MAAMC,SAEiB,YADCA,OAAOC,iBAAiB,GAAGC,cAAcC,iBAE9DC,MAAM,iEACNX,+BAEFH,MAAMe,UAAYL,OAClBV,MAAMgB,UAEPC,OAAM,KACLH,MAAM,0DACNX,qDAIJ,oBAAoBe,OAAM,WAC1BC,aAAaC,WAAW,aACxBD,aAAaC,WAAW,cACxB9B,MAAMQ,iBAAkB,EACxBuB,iBACAC,YAAYD,eAAgB/B,MAAMiC,wCAGlC,uCAAuCL,OAAM,WAC7Cf,uCAYIkB,eAAiB,QACrB/B,MAAMkC,GAAKL,aAAaM,QAAQ,aAE5BnC,MAAMQ,iBAAmBR,MAAMkC,GAAI,OAC/BE,QAAUzB,OAAO0B,WAAW,SAClCC,OAAOC,QAAQC,IAAIxC,OACfD,OAASG,OAAQ,CACnBS,OAAOZ,MAAQA,MACfY,OAAOT,OAASA,OAChBkC,QAAQK,UAAU/B,MAAO,EAAG,EAAGX,MAAOG,cAEhCwC,KAAO/B,OAAOgC,UAAU,aAC9B/B,MAAMgC,aAAa,MAAOF,MAC1B1C,MAAM6C,cAAgBH,WAEhBI,OAAS,CACbC,SAAU/C,MAAM+C,SAChBC,UAAWhD,MAAMkC,GACjBe,OAAQjD,MAAMiD,OACdC,WAAYR,KACZS,WAAYtB,aAAaM,QAAQ,eAG7BiB,QAAU,CACdC,WAAY,wCACZC,KAAMR,QAGRR,OAAOC,QAAQC,IAAIM,sBAEdS,KAAK,CAACH,UAAU,GAClBI,MAAMd,OACLJ,OAAOC,QAAQC,IAAIE,MACU,IAAzBA,KAAKe,SAASlD,QACZG,OACFgD,aAAaC,gBAAgB,CAC3BC,QACE,sDACFC,KAAM,aAKbC,MAAMC,MACLzB,OAAOC,QAAQC,iDAA0CuB,aArDhD,YACX3B,QAAUzB,OAAO0B,WAAW,MAClCD,QAAQ4B,UAAY,OACpB5B,QAAQ6B,SAAS,EAAG,EAAGtD,OAAOZ,MAAOY,OAAOT,cAEtCwC,KAAO/B,OAAOgC,UAAU,aAC9B/B,MAAMgC,aAAa,MAAOF,OAkDtBwB,KAKFxD,OACFA,MAAMyD,iBACJ,WACA,KACOhE,YACCH,MAAMQ,kBACRT,MAAQ,KAEVG,OAASQ,MAAM0D,aAAe1D,MAAM2D,WAAatE,OAE7CuE,MAAMpE,UACRA,OAASH,OAAS,EAAI,IAGxBW,MAAMkC,aAAa,QAAS7C,OAC5BW,MAAMkC,aAAa,SAAU1C,QAC7BS,OAAOiC,aAAa,QAAS7C,OAC7BY,OAAOiC,aAAa,SAAU1C,QAC9BC,WAAY,MAGhB"}