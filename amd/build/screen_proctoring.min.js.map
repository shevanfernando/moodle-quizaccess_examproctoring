{"version":3,"file":"screen_proctoring.min.js","sources":["../src/screen_proctoring.js"],"sourcesContent":["import $ from 'jquery';\nimport Ajax from 'core/ajax';\n\nexport const init = async(props) => {\n    let width = props.image_width; // We will scale the photo width to this\n    let height = 0; // This will be computed based on the input stream\n\n    let streaming = false;\n\n    // Skip for summary page\n    if (document.getElementById(\"page-mod-quiz-summary\") !== null &&\n        document.getElementById(\"page-mod-quiz-summary\").innerHTML.length) {\n        return false;\n    }\n    // Skip for review page\n    if (document.getElementById(\"page-mod-quiz-review\") !== null &&\n        document.getElementById(\"page-mod-quiz-review\").innerHTML.length) {\n        $(Ajax).call({\n            methodname: \"set_sc_quiz_status\",\n            args: {\n                'courseid': props.courseid,\n                'userid': props.userid,\n                'quizid': props.quizid\n            }\n        });\n        props.is_quiz_started = false;\n        return false;\n    }\n\n    if (props.is_quiz_started) {\n        // eslint-disable-next-line max-len\n        $('#mod_quiz_navblock').append(\n            '<div class=\"card-body p-3\" style=\"display: none\"><h3 class=\"no text-left\">Screen</h3> <br/>' +\n            '<video id=\"exproctor_video_sc\">Screen stream not available.</video>' +\n            '<canvas id=\"exproctor_canvas_sc\" style=\"display:none;\"></canvas>' +\n            '<div class=\"exproctor_output_sc\" style=\"display:none;\">' +\n            '<img id=\"exproctor_photo_sc\" alt=\"The picture will appear in this box.\"/></div></div>');\n    }\n\n    let video = document.getElementById('exproctor_video_sc');\n    let canvas = document.getElementById('exproctor_canvas_sc');\n    let photo = document.getElementById('exproctor_photo_sc');\n\n    $(\"#id_submitbutton\").click(function() {\n        props.is_quiz_started = true;\n        setInterval(takescreenshot, props.screenshotdelay);\n    });\n\n    navigator.mediaDevices\n        .getDisplayMedia({\n            video: {\n                cursor: \"always\"\n            }, audio: false\n        })\n        .then((stream) => {\n            video.srcObject = stream;\n            video.play();\n        })\n        .catch((err) => {\n            window.console.error(`An error occurred: ${err}`);\n        });\n\n    const clearphoto = () => {\n        const context = canvas.getContext(\"2d\");\n        context.fillStyle = \"#AAA\";\n        context.fillRect(0, 0, canvas.width, canvas.height);\n\n        const data = canvas.toDataURL(\"image/png\");\n        photo.setAttribute(\"src\", data);\n    };\n\n    const takescreenshot = () => {\n        props.id = localStorage.getItem(\"attemptId\");\n\n        if (props.is_quiz_started && props.id) {\n            const context = canvas.getContext(\"2d\");\n            window.console.log(props);\n            if (width && height) {\n                canvas.width = width;\n                canvas.height = height;\n                context.drawImage(video, 0, 0, width, height);\n\n                const data = canvas.toDataURL(\"image/png\");\n                photo.setAttribute(\"src\", data);\n                props.webcampicture = data;\n\n                const params = {\n                    'courseid': props.courseid,\n                    'attemptid': props.id,\n                    'quizid': props.quizid,\n                    'screenshot': data,\n                };\n\n                const request = {\n                    methodname: 'quizaccess_exproctor_send_screen_shot',\n                    args: params\n                };\n\n                window.console.log(params);\n\n                Ajax.call([request])[0].done((data) => {\n                    window.console.log(data);\n                    if (data.warnings.length !== 0) {\n                        if (video) {\n                            Notification.addNotification({\n                                message: 'Something went wrong during taking the screen-shot.', type: 'error'\n                            });\n                        }\n                    }\n                }).fail((err) => {\n                    window.console.log(\"Screen proctoring\");\n                    window.console.log(err);\n                });\n            } else {\n                clearphoto();\n            }\n        }\n    };\n\n    if (video) {\n        video.addEventListener(\n            \"canplay\",\n            () => {\n                if (!streaming) {\n                    if (props.is_quiz_started) {\n                        width = 270;\n                    }\n                    height = video.videoHeight / (video.videoWidth / width);\n\n                    if (isNaN(height)) {\n                        height = width / (4 / 3);\n                    }\n\n                    video.setAttribute(\"width\", width);\n                    video.setAttribute(\"height\", height);\n                    canvas.setAttribute(\"width\", width);\n                    canvas.setAttribute(\"height\", height);\n                    streaming = true;\n                }\n            },\n            false\n        );\n    }\n\n    // const vidOff = () => {\n    //     captureStream.getTracks().forEach(track => track.stop());\n    //     isCameraAllowed = false;\n    // };\n    //\n    // if (props.is_close) {\n    //     vidOff();\n    //     return false;\n    // }\n};"],"names":["async","width","props","image_width","height","streaming","document","getElementById","innerHTML","length","Ajax","call","methodname","args","courseid","userid","quizid","is_quiz_started","append","video","canvas","photo","click","setInterval","takescreenshot","screenshotdelay","navigator","mediaDevices","getDisplayMedia","cursor","audio","then","stream","srcObject","play","catch","err","window","console","error","id","localStorage","getItem","context","getContext","log","drawImage","data","toDataURL","setAttribute","webcampicture","params","request","done","warnings","Notification","addNotification","message","type","fail","fillStyle","fillRect","clearphoto","addEventListener","videoHeight","videoWidth","isNaN"],"mappings":"4WAGoBA,kBACZC,MAAQC,MAAMC,YACdC,OAAS,EAETC,WAAY,KAGyC,OAArDC,SAASC,eAAe,0BACxBD,SAASC,eAAe,yBAAyBC,UAAUC,cACpD,KAG6C,OAApDH,SAASC,eAAe,yBACxBD,SAASC,eAAe,wBAAwBC,UAAUC,iCACxDC,eAAMC,KAAK,CACTC,WAAY,qBACZC,KAAM,UACUX,MAAMY,gBACRZ,MAAMa,cACNb,MAAMc,UAGxBd,MAAMe,iBAAkB,GACjB,EAGPf,MAAMe,qCAEJ,sBAAsBC,OACpB,kXAOJC,MAAQb,SAASC,eAAe,sBAChCa,OAASd,SAASC,eAAe,uBACjCc,MAAQf,SAASC,eAAe,0CAElC,oBAAoBe,OAAM,WACxBpB,MAAMe,iBAAkB,EACxBM,YAAYC,eAAgBtB,MAAMuB,oBAGtCC,UAAUC,aACLC,gBAAgB,CACbT,MAAO,CACHU,OAAQ,UACTC,OAAO,IAEbC,MAAMC,SACHb,MAAMc,UAAYD,OAClBb,MAAMe,UAETC,OAAOC,MACJC,OAAOC,QAAQC,mCAA4BH,eAY7CZ,eAAiB,QACnBtB,MAAMsC,GAAKC,aAAaC,QAAQ,aAE5BxC,MAAMe,iBAAmBf,MAAMsC,GAAI,OAC7BG,QAAUvB,OAAOwB,WAAW,SAClCP,OAAOC,QAAQO,IAAI3C,OACfD,OAASG,OAAQ,CACjBgB,OAAOnB,MAAQA,MACfmB,OAAOhB,OAASA,OAChBuC,QAAQG,UAAU3B,MAAO,EAAG,EAAGlB,MAAOG,cAEhC2C,KAAO3B,OAAO4B,UAAU,aAC9B3B,MAAM4B,aAAa,MAAOF,MAC1B7C,MAAMgD,cAAgBH,WAEhBI,OAAS,UACCjD,MAAMY,mBACLZ,MAAMsC,UACTtC,MAAMc,kBACF+B,MAGZK,QAAU,CACZxC,WAAY,wCACZC,KAAMsC,QAGVd,OAAOC,QAAQO,IAAIM,sBAEdxC,KAAK,CAACyC,UAAU,GAAGC,MAAMN,OAC1BV,OAAOC,QAAQO,IAAIE,MACU,IAAzBA,KAAKO,SAAS7C,QACVU,OACAoC,aAAaC,gBAAgB,CACzBC,QAAS,sDAAuDC,KAAM,aAInFC,MAAMvB,MACLC,OAAOC,QAAQO,IAAI,qBACnBR,OAAOC,QAAQO,IAAIT,YAjDhB,YACTO,QAAUvB,OAAOwB,WAAW,MAClCD,QAAQiB,UAAY,OACpBjB,QAAQkB,SAAS,EAAG,EAAGzC,OAAOnB,MAAOmB,OAAOhB,cAEtC2C,KAAO3B,OAAO4B,UAAU,aAC9B3B,MAAM4B,aAAa,MAAOF,OA8ClBe,KAKR3C,OACAA,MAAM4C,iBACF,WACA,KACS1D,YACGH,MAAMe,kBACNhB,MAAQ,KAEZG,OAASe,MAAM6C,aAAe7C,MAAM8C,WAAahE,OAE7CiE,MAAM9D,UACNA,OAASH,OAAS,EAAI,IAG1BkB,MAAM8B,aAAa,QAAShD,OAC5BkB,MAAM8B,aAAa,SAAU7C,QAC7BgB,OAAO6B,aAAa,QAAShD,OAC7BmB,OAAO6B,aAAa,SAAU7C,QAC9BC,WAAY,MAGpB"}